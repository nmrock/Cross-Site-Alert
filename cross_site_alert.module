<?php

/**
 * Implements hook_menu().
 */
function cross_site_alert_menu() {
    $items = array();
    $items['admin/config/content/cross-site-alert'] = array(
        'title' => 'Cross-Site Alert',
        'description' => 'Cross-Site Alert administration.',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('cross_site_alert_admin_settings'),
        'access callback' => 'user_access',
        'access arguments' => array('administer site configuration'),
    );
    $items['json/csa.json'] = array(
        'page callback' => '_cross_site_alert_content',
        'access arguments' => array('access content',),
        'delivery callback' => 'drupal_json_output',
    );
    return $items;
}

/**
 * Administer CSA module
 */
function cross_site_alert_admin_settings($form, &$form_state) {
    $form['cross_site_alert_origin'] = array(
        '#title' => t('Will the alert content be controlled from this site?'),
        '#type' => 'radios',
        '#default_value' => variable_get('cross_site_alert_origin', 0),
        '#options' => array(0 => t("No, this is a client"), 1 => t('Yes, this is the origin')),
        '#description' => t('Only one site should be configured as the origin. All others should be set as a client and will pull the content from the origin.'),

    );
    $form['cross_site_alert_url'] = array(
    '#title' => t('Please provide the alert URL:'),
    '#type' => 'textfield',
    '#default_value' => variable_get('cross_site_alert_url', ''),
    '#states' => array(
      'visible' => array(
        ':input[name="cross_site_alert_origin"]' => array('value' => '0'),
      ),
    ),
  );
  $form['cross_site_alert_enabled'] = array(
        '#title' => t('Enable the alert?'),
        '#type' => 'radios',
        '#default_value' => variable_get('cross_site_alert_enabled', 0),
        '#options' => array(0 => t("Disable Alert"), 1 => t('Enable Alert')),
        '#description' => t('When the alert is enabled, all Cross Site Alert blocks (including on this site) will display the content in the text box <below></below>.'),
        '#states' => array(
            'visible' => array(
                ':input[name="cross_site_alert_origin"]' => array('value' => '1'),
            ),
        ),
    );
   $form['cross_site_alert_content'] = array(
    '#title' => t('Please provide the alert content:'),
    '#type' => 'textarea',
    '#default_value' => variable_get('cross_site_alert_content', ''),
    '#states' => array(
      'visible' => array(
        ':input[name="cross_site_alert_origin"]' => array('value' => '1'),
      ),
    ),
  );
  $form['cross_site_alert_JSON_endpoint'] = array(
   '#type' => 'item',
    '#title' => t('Alert URL'),
    '#markup' => check_plain($GLOBALS['base_url']) . '/json/csa.json',
    '#description' => t('Use this value to configure the Cross Site Alert module on client websites pull the above alert.'),
    '#states' => array(
      'visible' => array(
        ':input[name="cross_site_alert_origin"]' => array('value' => '1'),
      ),
    ),
  );
  return system_settings_form($form);
}


function _cross_site_alert_content() {
    //If set to client, JSON endpoint is disabled. Redirect to homepage.
    if ( variable_get('cross_site_alert_origin', 0) == 0) {
        drupal_goto('/');
        return;
    }
    // Allowing wildcard CORS for this page only, since it contains only the alert status
    // and alert content (which is intended to be publicly disseminated).
    drupal_add_http_header('Access-Control-Allow-Origin', '*');
    drupal_add_http_header('Access-Control-Allow-Methods', 'GET');

    //If alert is enabled, retrieve content and output as JSON
    $alertInfo = new stdClass();
    $alertInfo->enabled = variable_get('cross_site_alert_enabled', 0);
    if ($alertInfo->enabled != 0)
        $alertInfo->content = variable_get('cross_site_alert_content', '');
    return $alertInfo;
}

/**
 * Implements hook_block_info().
 */
function cross_site_alert_block_info() {
  $blocks['cross_site_alert_block'] = array(
    'info' => t('Cross Site Alert'),
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function cross_site_alert_block_view($delta = '') {
  $basepath = drupal_get_path('module', 'cross_site_alert');
  $block = array();

  switch ($delta) {
    case 'cross_site_alert_block':
      $build = array();
      $attached = array();
      $attached['css'] = array($basepath . '/css/cross-site-style.css');
      $attached['js'] = array($basepath . '/js/cross-site-alert.js');

      // If this is the origin, no need for an AJAX request -- just get content from DB.
      //Pass to front-end JS: alert content, status as host, and whether alert is enabled/disabled
      if ( variable_get('cross_site_alert_origin', 0) == 1) {
          drupal_add_js(array('cross_site_alert' => array(
            'content' => variable_get('cross_site_alert_content', ""),
            'host' => true,
            'enabled' => variable_get('cross_site_alert_enabled', 0),
              )
            ),
            array('type' => 'setting'));
      }
      else {
        // If this is a client, retrieve JSON endpoint URL.
        $crossSiteUrl = variable_get('cross_site_alert_url', null);
        if ($crossSiteUrl) {
          //Pass to front-end JS: status as client, JSON endpoint URL
           drupal_add_js(array('cross_site_alert' => array(
               'host' => false,
               'url' => $crossSiteUrl,
               )
              ), array('type' => 'setting'));
        }
        //If there is no source URL configured yet, display nothing
        else {
          return;
        }
      }
       $block['content'] = array(
         '#markup' => theme('cross_site_alert_block_content', $build),
         '#attached' => $attached,
         );
      break;
  }
  return $block;
}

/**
 * Implements hook_theme().
 */
function cross_site_alert_theme($existing, $type, $theme, $path) {
  return array(
    'cross_site_alert_block_content' => array(
      'variables' => array(
        'content' => '',
      ),
    ),
  );
}


function theme_cross_site_alert_block_content($variables) {

  $content = $variables['content'];
  $attributes = array(
    'id' => array('cross-site-alert'),
    'style' => array("background-image: url('/" .
          drupal_get_path('module', 'cross_site_alert') .
          "/img/info.png');"
    ),
  );
  $output =  array(
    '#type' => 'container',
    '#attributes' => $attributes,
    'content' => array(
      '#type' => 'markup',
      '#markup' => $content,
    )
  );

  return drupal_render($output);
}